{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/contexts/AppContext.tsx"],"sourcesContent":["\n\"use client\";\n\nimport type { Dispatch, ReactNode, SetStateAction } from \"react\";\nimport React, { createContext, useContext, useState, useMemo } from 'react';\n\n// Define Income Categories\nexport type IncomeCategory = \n  | \"Earned Income\" \n  | \"Business Income\" \n  | \"Investment Income\" \n  | \"Government Support\" \n  | \"Borrowed Money\" \n  | \"Gifted or Windfall Money\" \n  | \"Sales / Resale Income\";\n\nexport const incomeCategories: IncomeCategory[] = [\n  \"Earned Income\", \n  \"Business Income\", \n  \"Investment Income\", \n  \"Government Support\", \n  \"Borrowed Money\", \n  \"Gifted or Windfall Money\", \n  \"Sales / Resale Income\"\n];\n\nexport type IncomeEntry = {\n  id: string;\n  date: string; // ISO string for consistency\n  sourceName: string;\n  amount: number;\n  note: string; // Optional, but schema in modal makes it so\n  category: IncomeCategory;\n};\n\nexport type Expense = {\n  id: string;\n  name: string;\n  amount: number;\n  date: string; // Always store as ISO string for consistency\n  type: 'essential' | 'variable';\n  category: string; \n  subCategory?: string; \n};\n\nexport interface ExpenseCategoryGroup {\n  name: string; \n  options: string[]; \n}\n\ninterface AppContextType {\n  incomeEntries: IncomeEntry[];\n  addIncomeEntry: (newEntryData: Omit<IncomeEntry, 'id' | 'date'> & { date: Date }) => void;\n  expenses: Expense[];\n  addExpenseToList: (expense: Omit<Expense, 'id'> & { date: Date | string }) => void;\n  deleteExpenseById: (id: string) => void;\n  totalIncome: number;\n  totalExpenses: number;\n  availableBalance: number;\n  userName: string;\n  setUserName: Dispatch<SetStateAction<string>>;\n  fixedCategoryGroups: ExpenseCategoryGroup[];\n  variableCategoryGroups: ExpenseCategoryGroup[];\n  allCategoryOptions: string[];\n}\n\nconst AppContext = createContext<AppContextType | undefined>(undefined);\n\nconst housingOptions = ['Rent / Mortgage', 'Property Taxes', 'Homeowners/Renters Insurance', 'HOA Fees', 'Home Maintenance / Repairs', 'Other Housing'];\nconst utilitiesOptions = ['Electricity / Gas', 'Water / Sewer', 'Internet / Cable TV', 'Mobile Phone', 'Trash / Recycling', 'Other Utilities'];\nconst transportationOptions = ['Car Payment', 'Car Insurance', 'Fuel (Gas/Petrol)', 'Public Transportation (Bus, Train, Metro)', 'Ride Sharing (Uber, Lyft, Ola, etc.)', 'Vehicle Maintenance / Repairs', 'Parking Fees / Tolls', 'Other Transportation'];\nconst debtPaymentsOptions = ['Credit Card Payments', 'Student Loans', 'Personal Loans', 'Other Loan Payments'];\nconst foodOptions = ['Groceries', 'Dining Out / Restaurants', 'Coffee Shops', 'Takeaway / Delivery', 'Other Food'];\nconst personalCareOptions = ['Haircuts / Salon', 'Toiletries / Personal Hygiene Products', 'Gym / Fitness', 'Clothing / Shoes', 'Dry Cleaning / Laundry', 'Other Personal Care'];\nconst entertainmentOptions = ['Streaming Services (Netflix, Spotify, etc.)', 'Movies / Cinema', 'Concerts / Events', 'Hobbies', 'Books / Music', 'Video Games', 'Other Entertainment'];\nconst shoppingOptions = ['General Shopping', 'Electronics', 'Home Goods', 'Gifts', 'Other Shopping'];\n\nconst defaultFixedCategoryGroups: ExpenseCategoryGroup[] = [\n  { name: \"Housing\", options: housingOptions },\n  { name: \"Utilities\", options: utilitiesOptions },\n  { name: \"Transportation\", options: transportationOptions },\n  { name: \"Debt Payments\", options: debtPaymentsOptions },\n];\n\nconst defaultVariableCategoryGroups: ExpenseCategoryGroup[] = [\n  { name: \"Food\", options: foodOptions },\n  { name: \"Personal Care\", options: personalCareOptions },\n  { name: \"Entertainment\", options: entertainmentOptions },\n  { name: \"Shopping\", options: shoppingOptions },\n];\n\nconst allOptions = [...defaultFixedCategoryGroups, ...defaultVariableCategoryGroups]\n                    .flatMap(group => group.options);\n\nexport const AppProvider = ({ children }: { children: ReactNode }) => {\n  const [incomeEntries, setIncomeEntries] = useState<IncomeEntry[]>([]);\n  const [expenses, setExpenses] = useState<Expense[]>([]);\n  const [userName, setUserName] = useState<string>('Guest');\n\n  const addIncomeEntry = (newEntryData: Omit<IncomeEntry, 'id' | 'date'> & { date: Date }) => {\n    const newEntry: IncomeEntry = {\n      ...newEntryData,\n      id: new Date().toISOString() + Math.random().toString(),\n      date: newEntryData.date.toISOString(), // Convert Date to ISO string\n    };\n    setIncomeEntries(prevEntries => [newEntry, ...prevEntries]); // Add to beginning for recent first\n  };\n\n  const addExpenseToList = (expenseData: Omit<Expense, 'id'> & { date: Date | string }) => {\n    let definitiveDate: Date;\n    const now = new Date(); \n\n    if (typeof expenseData.date === 'string') {\n      const parsedDate = new Date(expenseData.date);\n      if (!isNaN(parsedDate.getTime())) { \n        const hasTimeComponent = /[T\\s_:]\\d{1,2}/.test(expenseData.date);\n        if (!hasTimeComponent) { \n          definitiveDate = new Date(\n            parsedDate.getFullYear(),\n            parsedDate.getMonth(),\n            parsedDate.getDate(),\n            now.getHours(),\n            now.getMinutes(),\n            now.getSeconds(),\n            now.getMilliseconds()\n          );\n        } else { \n          definitiveDate = parsedDate;\n        }\n      } else { \n        console.warn(`Invalid date string received: \"${expenseData.date}\". Defaulting to current date.`);\n        definitiveDate = new Date(now); \n      }\n    } else {\n      const d = expenseData.date as Date;\n      if (d && !isNaN(d.getTime())) { \n        const isMidnight = d.getHours() === 0 && d.getMinutes() === 0 && d.getSeconds() === 0 && d.getMilliseconds() === 0;\n        if (isMidnight) {\n          definitiveDate = new Date(\n            d.getFullYear(),\n            d.getMonth(),\n            d.getDate(),\n            now.getHours(),\n            now.getMinutes(),\n            now.getSeconds(),\n            now.getMilliseconds()\n          );\n        } else { \n          definitiveDate = d;\n        }\n      } else { \n        console.warn(`Received Date object is invalid. Defaulting to current date.`);\n        definitiveDate = new Date(now);\n      }\n    }\n\n    const newExpense: Expense = {\n      name: expenseData.name,\n      amount: expenseData.amount,\n      type: expenseData.type,\n      category: expenseData.category,\n      subCategory: expenseData.subCategory,\n      date: definitiveDate.toISOString(), \n      id: new Date().toISOString() + Math.random().toString(), \n    };\n\n    setExpenses(prevExpenses => [newExpense, ...prevExpenses]);\n  };\n\n  const deleteExpenseById = (id: string) => {\n    setExpenses(prevExpenses => prevExpenses.filter(expense => expense.id !== id));\n  };\n\n  const totalIncome = useMemo(() => {\n    return incomeEntries.reduce((sum, entry) => sum + entry.amount, 0);\n  }, [incomeEntries]);\n\n  const totalExpenses = useMemo(() => {\n      return expenses.reduce((sum, exp) => {\n          const amount = typeof exp.amount === 'number' && !isNaN(exp.amount) ? exp.amount : 0;\n          return sum + amount;\n      }, 0);\n  }, [expenses]);\n\n  const availableBalance = useMemo(() => totalIncome - totalExpenses, [totalIncome, totalExpenses]);\n\n  return (\n    <AppContext.Provider value={{\n      incomeEntries,\n      addIncomeEntry,\n      expenses,\n      addExpenseToList,\n      deleteExpenseById,\n      totalIncome,\n      totalExpenses,\n      availableBalance,\n      userName,\n      setUserName,\n      fixedCategoryGroups: defaultFixedCategoryGroups,\n      variableCategoryGroups: defaultVariableCategoryGroups,\n      allCategoryOptions: allOptions,\n    }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useAppContext = (): AppContextType => {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useAppContext must be used within an AppProvider');\n  }\n  return context;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-toast.ts"],"sourcesContent":["\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toast.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,gBAAgB,oKAAA,CAAA,WAAwB;AAE9C,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qIACA;QAED,GAAG,KAAK;;;;;;;AAGb,cAAc,WAAW,GAAG,oKAAA,CAAA,WAAwB,CAAC,WAAW;AAEhE,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6lBACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAI3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACnC,qBACE,6LAAC,oKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;;AACA,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAoB,CAAC,WAAW;AAEpD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,SAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sgBACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,oKAAA,CAAA,SAAsB,CAAC,WAAW;AAE5D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yVACA;QAEF,eAAY;QACX,GAAG,KAAK;kBAET,cAAA,6LAAC,+LAAA,CAAA,IAAC;YAAC,WAAU;;;;;;;;;;;;AAGjB,WAAW,WAAW,GAAG,oKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG,oKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB;QACnC,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG,oKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 586, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toaster.tsx"],"sourcesContent":["\"use client\"\n\nimport { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAYO,SAAS;;IACd,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAE1B,qBACE,6LAAC,oIAAA,CAAA,gBAAa;;YACX,OAAO,GAAG,CAAC,SAAU,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,OAAO;gBAChE,qBACE,6LAAC,oIAAA,CAAA,QAAK;oBAAW,GAAG,KAAK;;sCACvB,6LAAC;4BAAI,WAAU;;gCACZ,uBAAS,6LAAC,oIAAA,CAAA,aAAU;8CAAE;;;;;;gCACtB,6BACC,6LAAC,oIAAA,CAAA,mBAAgB;8CAAE;;;;;;;;;;;;wBAGtB;sCACD,6LAAC,oIAAA,CAAA,aAAU;;;;;;mBARD;;;;;YAWhB;0BACA,6LAAC,oIAAA,CAAA,gBAAa;;;;;;;;;;;AAGpB;GAtBgB;;QACK,+HAAA,CAAA,WAAQ;;;KADb","debugId":null}}]
}